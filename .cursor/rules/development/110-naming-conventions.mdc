name: "Naming Conventions"
description: "Standards for naming variables, functions, files, and branches"
globs: ["**/*"]
alwaysApply: true

---

# Naming Conventions

## Version Numbers
- Format: `vX.Y.Z`
  - X: Major version (breaking changes)
  - Y: Minor version (new features)
  - Z: Patch version (bug fixes)
- Examples:
  - `v1.0.0` - Initial stable release
  - `v1.1.0` - New features added
  - `v1.1.1` - Bug fixes for v1.1.0

## Branch Naming
- Types:
  - `feature/*` - New features and enhancements (e.g., `feature/123-add-user-authentication`)
  - `bugfix/*` - Bug fixes (e.g., `bugfix/456-fix-login-validation`)
  - `hotfix/*` - Urgent production fixes (e.g., `hotfix/789-security-patch`)
  - `release/*` - Release branches using version number:
    - `release/1.0.0` - Major release
    - `release/1.1.0` - Feature release
    - `release/1.1.1` - Patch release
  - `release/current` - Points to current production release

- Format by type:
  - Feature/Bugfix/Hotfix: `type/issue-number-short-description`
  - Release: `release/X.Y.Z` (follows version number format)

## Commit Messages
- Format: `type(scope): description`
- Types:
  - `feat`: New feature
  - `fix`: Bug fix
  - `docs`: Documentation changes
  - `style`: Code style changes
  - `refactor`: Code refactoring
  - `test`: Adding or modifying tests
  - `chore`: Maintenance tasks
- Scope: Component or module affected
- Description: Clear, concise explanation
- Example: `feat(job-search): add LinkedIn job board integration` 